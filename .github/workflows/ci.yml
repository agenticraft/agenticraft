name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install -r requirements-dev.txt
    
    - name: Lint with ruff
      run: |
        ruff check agenticraft/ tests/
    
    - name: Format check with black
      run: |
        black --check agenticraft/ tests/
    
    - name: Type check with mypy
      run: |
        mypy agenticraft/

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install -r requirements-dev.txt
    
    - name: Run unit tests with coverage
      run: |
        pytest tests/ -v --cov=agenticraft.core --cov-report=xml --cov-report=term-missing --cov-fail-under=95
    
    - name: Run integration tests
      run: |
        pytest tests/integration/ -v -m integration
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: true

  docs:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install mkdocs mkdocs-material mkdocstrings[python]
    
    - name: Build documentation
      run: |
        mkdocs build --strict
    
    - name: Check for broken links
      run: |
        pip install linkchecker
        linkchecker site/

  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Run Bandit security check
      run: |
        pip install bandit
        bandit -r agenticraft/ -ll
    
    - name: Run safety check
      run: |
        pip install safety
        safety check

  examples:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
    
    - name: Test examples can be imported
      run: |
        # Test examples can be run (not imported due to numeric prefixes)
        python examples/01_hello_world.py --help || true
        python examples/02_simple_chatbot.py --help || true
        python examples/03_configuration.py --help || true
        python examples/04_workflow_research.py --help || true
        python examples/05_tools_showcase.py --help || true
    
    - name: Validate example structure
      run: |
        python tests/validate_examples.py

  build:
    runs-on: ubuntu-latest
    needs: [lint, test, docs]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Build package
      run: |
        pip install build
        python -m build
    
    - name: Check package
      run: |
        pip install twine
        twine check dist/*
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/
